package controller

import (
	. "Vectra/src/model/service"
	. "Vectra/src/model/storage"
	"github.com/gofiber/fiber/v2"
	. "github.com/gofiber/fiber/v2/middleware/session"
	. "github.com/phosmachina/FluentKV/reldb"
)

type ApiV1Controller struct {
	Controller
}

func NewApiV1Controller(r fiber.Router, store *Store) {
	newApiV1Controller(r, store)
}

func (c ApiV1Controller) activateAdmin(ctx *fiber.Ctx) error {
	return HandleRequest(
		ctx,
		func(t ActivateAdminExch) (error,
			*ObjWrapper[IObject]) {
			return GetApiV1().ActivateAdmin(t), nil
		},
		nil,
	)
}

func (c ApiV1Controller) login(ctx *fiber.Ctx) error {

	sess, err := c.store.Get(ctx)
	if err != nil {
		return fiber.ErrInternalServerError
	}

	return HandleRequest(
		ctx,
		func(t ConnectExch) (error, *ObjWrapper[User]) {
			return GetApiV1().Connect(t, sess.ID(),
				ctx.GetRespHeader("User-Agent"))
		},
		func(userWrp *ObjWrapper[User]) {
			sess.Set(SessionKeyForUserId, userWrp.ID)
			sess.Save()
		},
	)
}
